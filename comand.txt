################# Linux #######################
rm -rf # dell dir
systemctl list-unit-files |grep 'enabled' #list activ service
sudo apt update && sudo apt upgrade -y

ps -ef |grep nexus #kill process 
kill -9 1445

tail -f /opt/sonatype-work/nexus3/log/nexus.log


ps -ef |grep httpd |grep -v 'grep' |awk '{print $2}' |xargs kill - kill pcoses
dpkg -i tree_1.8.0-1_amd64.deb #debian install package 
touch test{1..5}.txt #creat multi file
cp /tmp/2120_ben_resume/2120_ben_resume/* /var/www/html/ -r copy
systemctl enable httpd #  enable service
mkdir -p /f/vagrant-vms/wordpress
ln -s #link file
vim /etc/netplan/50-vagrant.yaml # set ip
sudo netplan apply
 ss -tunlp |grep 11211 #netstat
curl -s https://packagecloud.io/install/repositories/rabbitmq/rabbitmq-server/script.rpm.sh | sudo bash # install from script


[root@db01 ~]# vim /etc/profile # הכנה של משתנה קבוע
[root@db01 ~]# source /etc/profile
[root@db01 ~]# echo $DATABASE_PASS

$? # מצב פקודה אחרונה

Mem=$(free -m |grep Mem |awk '{print $4}') # טעינה של פלט פקודה למשתנה
for i in $(git log --oneline  |awk '{print $1}');do git show $i;done # $i...


echo 'guy,lupo' |awk -F',' '{print $2}' #split
df -h |grep "\-root" |awk '{print $2}' # \ מתעלם מסימן מיוחד הבא אחריו

סופר כרטיסי רשת מתעלם מ הלוקאלי
ip addr show |grep -v LOOPBACK |grep -ic mtu # v מתעלם # ic count
#ssh
ssh devops@web01 uptime # remote command 

ssh-keygen # יצירת מפתח
ssh-copy-id devops@web01 # העתקה שלו לשרת מרוחק

scp test.sh devops@web01:/tmp/ # send file test.sh to web01 in /tmp

ssh -i /c/Users/lupo2/Documents/devops/Amazon/servers/test/gymso/gymso-dev-nvir.pem  centos@54.237.215.205 #חיבור לשרת מרוחק עם מפתח באמזון


lsof # Open file 




#bash

#!/bin/bash
echo "Hello"
read -p " type a number:" num
echo "you type $num ckecing..."
sleep 1
if [ $num -gt 100 ] # שם לב לרווח !!!
then
        echo "$num is gt 100"
elif [ $num -eq 100 ]
then
        echo "$num is eq 100"
else
        echo "$num is lt 100"
fi
echo $num1

תרגיל ניטור מצב תהליך HTTPD
#!/bin/bash

ls /var/run/httpd/httpd.pid &> /dev/null
var1=$?

if [ $var1 -ne 0 ] # בודק מצב של פקודה אחרונה (יש דרך טובה יותר לבדוק זה סתם לתרגיל)
then
          echo "#######################" &>> /var/log/monitor_httpd.log # to Log file
  date &>> /var/log/monitor_httpd.log
  echo "httpd service is down" &>> /var/log/monitor_httpd.log
  echo "I'm trying to start it"  &>> /var/log/monitor_httpd.log
  systemctl start httpd
  stat=$(systemctl status httpd |grep "Active:" |awk '{print $3}' |awk -F'(' '{print$2}'|awk -F')' '{print$1}')
   if [ $stat=running ]
   then
      echo "I succeeded"  &>> /var/log/monitor_httpd.log
   else
      echo "Something's wrong" &>> /var/log/monitor_httpd.log
    fi
else
 echo "httpd is up"

fi

#loop

#!/bin/bash

for var in guy lupo yuval daniel ira
 do
 echo $var
 done

#!/bin/bash

count=0

while [ $count -lt 10 ]
do
 count=$(($count + 1))
 echo "$count"
done

for i in `cat remhost` ; do  echo $i ; done #remhost is a file whit list

for i in `cat remhost` ; do ssh  devops@$i uptime ; done # run remote command on multi servers
for i in `cat remhost` ; do scp websetupmulti.sh devops@$i:/tmp/ ; ssh devops@$i chmod +x /tmp/websetupmulti.sh ; ssh devops@$i  /tmp/websetupmulti.sh ; done   # send script file websetupmulti.sh to servers end run it




##################devops###################### 
#vagrant 

vagrant init "ubuntu/trusty64" #from https://app.vagrantup.com/boxes/search
vagrant up start vm
vagrant halt stop stop vm
vagrant ssh #connect
vagrant halt # stop


#CODE BUILD & DEPLOY

git clone -b local-setup https://github.com/devopshydclub/vprofile-project.git # get the surs code 
mvn install #Build code


#mysql 

connnection.ping()  # reconnecting mysql 

CREATE USER 'lupo'@'%' IDENTIFIED BY 'pass'; # CREATE USER
CREATE USER 'DBA'@'%' IDENTIFIED BY 'Gg442875';
GRANT ALL PRIVILEGES ON *.* TO 'DBA'@'%'; # super user


CREATE DATABASE testdb01; #CREATE DATABASE
CREATE TABLE pet (name VARCHAR(20), owner VARCHAR(20),
       species VARCHAR(20), sex CHAR(1), birth DATE, death DATE);
	   
INSERT INTO pet VALUES ('Puffball','Diane','hamster','f','1999-03-30',NULL); # add line to DB	   
GRANT ALL PRIVILEGES ON testdb01 TO 'lupo'@'%';
FLUSH PRIVILEGES; !!! Saving updates to the user privileges


SELECT * FROM pet where name = 'start';






 mysql -u root -padmin123 -e "FLUSH PRIVILEGES" #run command
mysql -u root -padmin123 accounts </root/vprofile-project/src/main/resources/db_backup.sql #restor 



#Git

cat .git/config 

git init # הפעלה
git config --global user.mail
git config --global user.name

git remote add origin https://github.com/lupo218/Calss6-.git cd 
git push -u origin master



git branch -c spirnt1 #new branch
git branch -a #list branch
git branch --set-upstream-to main/selenium03_Dev01 # main ראשי selenium03_Dev01 ענף
חשוב לקרוא כ ראשי/ענף


…or push an existing repository from the command line
git remote add origin https://github.com/lupo218/Documents.git
git branch -M main
git push -u origin main
git pull origin main







git checkout spirnt1 #Switched to branch 'spirnt1'
git rm # deleted
git status
git mv # rename move
git add . # add file and folder to index
git commit -m
git revert {log num} -m 

git push origin spirnt1 # pust to spirnt1 branch
git pull # get chened
git switch spirnt1
merge
go to the branch you what to merge with
git switch main 
git merge spirnt1  # run the merge with tha branch

vim .gitignore #list of file that git will ignore

git push --all origin

Rollback

git checkout file # if the file was not commit can dwonlod it back 
git diff #show diffrent
git restore --staged  saturn1.py # if you did add .

git log --graph  --oneline  --all # get version
git checkout d6b6f5c # returnt to version number # only view (you can copy to new branch)



Reverting Working Copy to Most Recent Commit
To revert to the previous commit, ignoring any changes:

git reset --hard HEAD
where HEAD is the last commit in your current branch

Reverting The Working Copy to an Older Commit
To revert to a commit that's older than the most recent commit:

# Resets index to former commit; replace '56e05fced' with your commit code
git reset 56e05fced 

# Moves pointer back to previous HEAD
git reset --soft HEAD@{1}

git commit -m "Revert to 56e05fced"

# Updates working copy to reflect the new commit
git reset --hard




#aws








#Jenkins

set versions
mkdir -p versions
#cp target/vprofile-v2.war versions/vprofile-v$BUILD_ID.war
















